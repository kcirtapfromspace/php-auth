---
apiVersion: v1
kind: Service
metadata:
  name: minio
  labels:
    app: minio
spec:
  selector:
    app: minio
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
---
apiVersion: v1
stringData:
  accessKey: admin
  secretKey: password
  bucketName: healthdata
kind: Secret
metadata:
  name: minio-secrets
  labels:
    app: minio
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  labels:
    app: minio
spec:
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: main
          image:  quay.io/minio/minio:latest
          args: [server, ' --console-address 9090', /data]
          # env:
          #   - name: MINIO_ROOT_USER
          #     valueFrom:
          #       secretKeyRef:
          #         name: dev-stack-shared-secrets
          #         key: MINIO_ROOT_USER
          #   - name: MINIO_ROOT_PASSWORD
          #     valueFrom:
          #       secretKeyRef:
          #         name: dev-stack-shared-secrets
          #         key: MINIO_ROOT_PASSWORD
          ports:
          - containerPort: 9000

          lifecycle:
            postStart:
              exec:
                command: [mkdir, -p, /data/healthrecord]
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
          - mountPath: /data
            name: localvolume # Corresponds to the `spec.volumes` Persistent Volume
      volumes:
      - name: localvolume
        hostPath: # MinIO generally recommends using locally-attached volumes
          path: /mnt/disk1/data # Specify a path to a local drive or volume on the Kubernetes worker node
          type: DirectoryOrCreate # The path to the last directory must exist